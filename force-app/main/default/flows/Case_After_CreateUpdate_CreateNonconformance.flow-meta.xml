<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>64.0</apiVersion>
    <areMetricsLoggedToDataCloud>false</areMetricsLoggedToDataCloud>
    <decisions>
        <description>Checks if the current user has the &apos;Case_Admin&apos; permission set assigned by verifying if the PermissionSetAssignment record exists.</description>
        <name>Check_If_User_Has_Case_Admin_PSet</name>
        <label>Check If User Has Case_Admin PSet</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnectorLabel>No Permission</defaultConnectorLabel>
        <rules>
            <name>Has_Permission</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_User_PSetAssignment</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Create_Nonconformance_Record</targetReference>
            </connector>
            <label>Has Permission</label>
        </rules>
    </decisions>
    <description>Triggered after a Case is created or updated. If the Case Type is &quot;Problem&quot;, and the user has the &apos;Case Admin&apos; permission set, this Flow creates a related Nonconformance record. This ensures only authorized users can log formal problems for quality tracking.</description>
    <environments>Default</environments>
    <interviewLabel>Case_After_CreateUpdate_CreateNonconformance {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Case After Create/Update â€“ Create Nonconformance</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <description>Creates a new Nonconformance record linked to the Case when the user has the &apos;Case_Admin&apos; permission set and Case Type is &apos;Problem&apos;.</description>
        <name>Create_Nonconformance_Record</name>
        <label>Create Nonconformance Record</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignRecordIdToReference>nonconformanceId</assignRecordIdToReference>
        <connector>
            <targetReference>Update_Case_with_Nonconformance_Id</targetReference>
        </connector>
        <inputAssignments>
            <field>SQX_Description__c</field>
            <value>
                <elementReference>$Record.Description</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SQX_Priority__c</field>
            <value>
                <elementReference>$Record.Priority</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SQX_QMS_Reference_Number__c</field>
            <value>
                <elementReference>$Record.CaseNumber</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SQX_Title__c</field>
            <value>
                <elementReference>$Record.Subject</elementReference>
            </value>
        </inputAssignments>
        <object>SQX_Nonconformance__c</object>
    </recordCreates>
    <recordLookups>
        <description>Retrieves the PermissionSet record with the name &quot;Case Admin&quot;</description>
        <name>Get_Case_Admin_PSet</name>
        <label>Get Case Admin PSet</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_User_PSetAssignment</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Case_Admin</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>PermissionSet</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Retrieves PermissionSetAssignment records for the current user filtered by the specified Permission Set named &quot;Case Admin&quot;.Will Used to check if the user has the required permission set assigned.</description>
        <name>Get_User_PSetAssignment</name>
        <label>Get User PSetAssignment</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_If_User_Has_Case_Admin_PSet</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>AssigneeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$User.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>PermissionSetId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Case_Admin_PSet.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>PermissionSetAssignment</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <description>Updates the current Case record by setting its NC reference lookup field to the Id of the newly created Nonconformance record. This links the Case to the corresponding Nonconformance for tracking and reporting purposes</description>
        <name>Update_Case_with_Nonconformance_Id</name>
        <label>Update Case with Nonconformance Id</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <inputAssignments>
            <field>SQX_NC_Reference__c</field>
            <value>
                <elementReference>nonconformanceId</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <start>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Case_Admin_PSet</targetReference>
        </connector>
        <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Problem</stringValue>
            </value>
        </filters>
        <filters>
            <field>SQX_NC_Reference__c</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <object>Case</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <description>Stores newly created nonconformance record Id to link with Case</description>
        <name>nonconformanceId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
